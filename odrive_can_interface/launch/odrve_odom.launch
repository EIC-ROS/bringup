<?xml version="1.0"?>
<launch>

	
    <!-- By default, we are not in debug mode -->
    <arg name="debug" default="false"/>

    <arg default="$(find odrive_can_interface)/rviz.rviz" name="rvizconfig"/>
    <param  name="robot_description" command="$(find xacro)/xacro --inorder $(find walkie3_description)/urdf/walkie_cr3.xacro"/>
    
    <arg name="svo_file"             default="" /> <!-- <arg name="svo_file" default="path/to/svo/file.svo"> -->
    <arg name="stream"               default="" /> <!-- <arg name="stream" default="<ip_address>:<port>"> -->

    <arg name="node_name"            default="zed_node" />
    <arg name="camera_model"         default="zed2i" />
    <arg name="publish_urdf"         default="false" />

    <arg name="camera_name"          default="zed2i" />

    <arg name="base_frame"           default="camera_servo" />

    <arg name="cam_pos_x"             default="0.0" /> <!-- Position respect to base frame (i.e. "base_link) -->
    <arg name="cam_pos_y"             default="0.0" /> <!-- Position respect to base frame (i.e. "base_link) -->
    <arg name="cam_pos_z"             default="0.0" /> <!-- Position respect to base frame (i.e. "base_link) -->
    <arg name="cam_roll"              default="0.0" /> <!-- Orientation respect to base frame (i.e. "base_link) -->
    <arg name="cam_pitch"             default="0.0" /> <!-- Orientation respect to base frame (i.e. "base_link) -->
    <arg name="cam_yaw"               default="0.0" /> <!-- Orientation respect to base frame (i.e. "base_link) -->
  
    <!-- <group ns="$(arg camera_name)">
        <include file="$(find zed_wrapper)/launch/include/zed_camera.launch.xml">
          <arg name="camera_name"         value="$(arg camera_name)" />
          <arg name="svo_file"            value="$(arg svo_file)" />
          <arg name="stream"              value="$(arg stream)" />
          <arg name="node_name"           value="$(arg node_name)" />
          <arg name="camera_model"        value="$(arg camera_model)" />
          <arg name="base_frame"          value="$(arg base_frame)" />
          <arg name="publish_urdf"        value="$(arg publish_urdf)" />
          <arg name="cam_pos_x"           value="$(arg cam_pos_x)" />
          <arg name="cam_pos_y"           value="$(arg cam_pos_y)" />
          <arg name="cam_pos_z"           value="$(arg cam_pos_z)" />
          <arg name="cam_roll"            value="$(arg cam_roll)" />
          <arg name="cam_pitch"           value="$(arg cam_pitch)" />
          <arg name="cam_yaw"             value="$(arg cam_yaw)" />
        </include>
    </group> -->

<!-- <include file="$(find gta_joy_trans)/launch/gta_joy_trans.launch"/> -->
    <include file="$(find teleop_twist_joy)/launch/teleop.launch"/>
<!-- ODRIVE INTERFACE NODE -->
     <node pkg="odrive_can_interface" type="odrive_can_interface.py" name="odrive_can_interface"/>

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
    <rosparam param="source_list">["/camera_state_publisher", "/griper_state_publisher", "/dobot/joint_states"]</rosparam>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

<!-- EKF FILTER -->
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_local_sensor" >
        <rosparam command="load" file="$(find odrive_can_interface)/param/ekf.yaml" />
    </node>

<!-- IMU FILTER -->
    <!-- <node pkg="imu_filter_madgwick" type="imu_filter_node" name="imu_filter_madgwick">
            <param name="fixed_frame" value="imu_link" />
            <param name="publish_tf" value="false" />
            <param name="use_mag" value="true" />
            <param name="remove_gravity_vector" value="true" />
            <param name="orientation_stddev " value="0.01" />
            <remap from="/imu/data_raw" to="/zed2i/zed_node/imu/data_raw" />
            <remap from="/imu/mag" to="/zed2i/zed_node/imu/mag" />
    </node> -->

    <node name="richbeam_lidar" pkg="lakibeam1" type="lakibeam1_scan_node">
        <remap from="/richbeam_lidar/scan" to="/back/scan" />
        <param name="frame_id" type="string" value="back_lidar"/>
        <param name="output_topic" type="string" value="scan" />
        <param name="inverted" type="bool" value="false"/>
        <param name="hostip" type="string" value="10.10.10.10"/>
        <param name="sensorip" type="string" value="10.10.10.9"/>
        <param name="port" type="string" value="2368"/>
        <param name="angle_offset" type="int" value="0"/>
        <param name="scanfreq" type="string" value="30" />
        <param name="filter" type="string" value="3" />
        <param name="laser_enable" type="string" value="true" />
        <param name="scan_range_start" type="string" value="90" />
        <param name="scan_range_stop" type="string" value="270" />
    </node>

    <node name="urg_node" pkg="urg_node" type="urg_node">
        <param name="ip_address" value="10.10.10.21"/>
        <param name="frame_id" value="front_lidar"/>
        <param name="angle_max" value="1.833"/>
        <param name="angle_min" value="-1.833"/>
        <remap from="/scan" to="/front/scan"/>
    </node>

    <node pkg="ira_laser_tools" name="laserscan_multi_merger" type="laserscan_multi_merger" output="screen">
        <param name="destination_frame" value="virtual_lidar"/>
        <param name="cloud_destination_topic" value="/merged_cloud"/>
        <param name="scan_destination_topic" value="/scan"/>
        <param name="laserscan_topics" value ="/front/scan /back/scan" /> 
        <param name="angle_min" value="-3.14"/>
        <param name="angle_max" value="3.14"/>
        <param name="angle_increment" value="0.0058"/>
        <param name="scan_time" value="0.0333333"/>
        <param name="range_min" value="0.30"/>
        <param name="range_max" value="50.0"/>
    </node> 

    <node args="-d $(arg rvizconfig)" name="rviz" pkg="rviz" required="true" type="rviz"/>
    <node name="camegrip" pkg="dy_custom" type="camegrip"/>
    
	    <include file="$(find cr3_moveit)/launch/move_group.launch">
        <arg name="allow_trajectory_execution" value="true"/>
        <arg name="fake_execution" value="false"/>
        <arg name="info" value="true"/>
        <arg name="debug" value="$(arg debug)"/>
    </include>
    
        <include file="$(find cr3_moveit)/launch/planning_context.launch">
        <arg name="load_robot_description" value="true"/>
    </include>
    
</launch>
